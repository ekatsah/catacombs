#!/usr/bin/python

import os
import sys
from argparse import ArgumentParser, RawDescriptionHelpFormatter
from os.path import abspath, split
from urllib import urlopen
from os.path import exists
from json import loads

try:
    from catacombs import dblite
except ImportError:
    sys.path.append("..")
    from catacombs import dblite

help_msg = '''Available commands:
  add_book  - add a list of ebooks to the db
  add_peer  - add a list of peers to the db'''

def add_book(books):
    print str(books)
    if not books:
        print "give me at least one ebook name"
        sys.exit(1)
    for book in books:
        book_path = abspath(book)
        if not exists(book_path):
            print "Error: '%s' doesn't not exists" % book_path
            return
        book = split(book)[-1]
        dblite.add_a_book(book_path, book)

def add_peer(peers):
    if not peers:
        print "give me at least one url to a peers"
        sys.exit(1)
    for peer in peers:
        try:
            name = loads(urlopen(peer + "/about").read())["owner"]
        except IOError:
            print "error, can't connect to %s" % peer
        else:
            dblite.add_a_peer(peer, name)

if __name__ == "__main__":
    parser = ArgumentParser(description='Catacomb main manager.',
                            formatter_class=RawDescriptionHelpFormatter,
                            epilog=help_msg)
    parser.add_argument('command', metavar='command', choices=["add_book", "add_peer"], type=str, nargs=1, help='command to be executed')
    parser.add_argument('params', metavar='params', type=str, nargs='+', help='params concerned by command')
    args = parser.parse_args()
    try:
        globals()[args.command[0]](args.params)
    except KeyError:
        print "Wrong command"
